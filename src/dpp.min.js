let DPP=class{constructor(e){e=e||"DPP",this.name="DPP",this.build="1.1",this.buildDate="21 June 2022",this.store=e,this.objectStores=new Map,this.idb=!1,this.stores={},this.listeners=new Map,this.logging=!1,this.target={},this.started=!1;let t=this;this.deepProxy=class{constructor(e,t){return this._preproxy=new WeakMap,this._handler=t,this.proxify(e,[])}makeHandler(e){let t=this;return{set:(r,s,i,o)=>("object"==typeof i&&(i=t.proxify(i,[...e,s])),r[s]=i,t._handler.set&&t._handler.set(r,[...e,s],i,o),!0),deleteProperty(r,s){if(Reflect.has(r,s)){t.unproxy(r,s);let i=Reflect.deleteProperty(r,s);return i&&t._handler.deleteProperty&&t._handler.deleteProperty(r,[...e,s]),i}return!1}}}unproxy(e,t){this._preproxy.has(e[t])&&(e[t]=this._preproxy.get(e[t]),this._preproxy.delete(e[t]));for(let r of Object.keys(e[t]))"object"==typeof e[t][r]&&this.unproxy(e[t],r)}proxify(e,t){for(let r of Object.keys(e))"object"==typeof e[r]&&(e[r]=this.proxify(e[r],[...t,r]));let r=new Proxy(e,this.makeHandler(t));return this._preproxy.set(r,e),r}},this.objectStore=class{constructor(e){this.name=e}getObjectStore(e){return t.idb.transaction(this.name,e).objectStore(this.name)}iterate_db(e,t,r){let s;t||"function"!=typeof e||(t=e,e=null);let i="";e&&(s=IDBKeyRange.lowerBound(e),i=e.toString()+","),this.getObjectStore().openCursor(s).onsuccess=function(s){let o=s.target.result;if(o){let s=o.value;if(e){let e=s.id.toString()+",";""!==i&&e.startsWith(i)?(t&&t(s.id,s.value),o.continue()):r&&"function"==typeof r&&r()}else t&&t(s.id,s.value),o.continue()}else r&&"function"==typeof r&&r()}}iterate(e,t){t||"function"!=typeof e||(t=e,e=null);let r=this;return new Promise(s=>{r.iterate_db(e,t,function(){s()})})}async clearByKey(e){let t=this;await this.iterate(e,async function(e){await t.delete(e)})}clear_db(e){if(!t.idb)return e({error:"clear() Error: Database has not been opened"});let r=this.getObjectStore("readwrite");t.logMessage("*** cleardown database");let s=r.clear();s.onsuccess=function(){e({ok:!0})},s.onerror=function(){e({error:s.error})}}clear(){let e=this;return new Promise(t=>{e.clear_db(function(e){t(e)})})}put_item(e,r,s){if(!t.idb)return s({error:"addItem Error: Database has not been opened"});s||(s=r,r=e,e=null);let i=this.getObjectStore("readwrite");t.logMessage("*** put: key = "+e);let o=i.put(r);o.onsuccess=function(){s({key:o.result})},o.onerror=function(){s({error:o.error})}}put(e,t){t||(t=e,e=null);let r=this;return new Promise(s=>{r.put_item(e,t,function(e){s(e)})})}delete_item(e,r){if(!t.idb)return r({error:"delete_item Error: Database has not been opened"});let s=this.getObjectStore("readwrite");t.logMessage("*** delete: key = "+e);let i=s.delete(e);i.onsuccess=function(){r({ok:!0})},i.onerror=function(){r({error:i.error})}}delete(e){let t=this;return new Promise(r=>{t.delete_item(e,function(e){r(e)})})}},this.persistAs=class{constructor(e){t.target[e]={},this.storeName=e,this.store=t.stores[e],this.persist=!0}async proxy(e){let r=this,s=this.storeName,i=this.store,o=new t.deepProxy(t.target[s],{async set(e,s,o,n){if(!r.persist)return;t.logMessage("proxy set called with prop = "+JSON.stringify(s));let a=r.receiver,l=!1;async function c(r,o){t.logMessage("save called with key "+JSON.stringify(r)+" = "+o),await i.clearByKey(r),1===r.length&&(e[s]=o);let n={id:r,value:o};await i.put(n)}return s.forEach(function(e,t){a=a[e],l&&(s[t]=[e]),l=Array.isArray(a)}),"object"==typeof o&&async function e(r,s){t.logMessage("getProps called for "+JSON.stringify(r)),t.logMessage("obj="+JSON.stringify(s)),await i.clearByKey(r);let o=Array.isArray(s);Object.entries(s).forEach(async(t,s)=>{let[i,n]=t;o&&(i=[i]);let a=r.slice();a.push(i),"object"!=typeof n?await c(a,n):e(a,n)})}(s,o),["string","number","boolean","symbol","bigint"].includes(typeof o)&&c(s,o),!0},deleteProperty(e,t){let s=r.receiver,o=!1;t.forEach(function(e,r){s=s[e],o&&(t[r]=[e]),o=Array.isArray(s)}),i.clearByKey(t)}});return this.receiver=o,"new"!==e?await this.restore():await this.clear(),o}async clear(){await this.store.clear()}async restore(){var e={};await this.store.iterate(function(t,r){var s=e;let i;t.forEach(function(e,o){let n=!1;if(Array.isArray(e)&&(n=!0,e=+e[0]),0===o&&(i=e),o===t.length-1)s[e]=r;else{let r=t[o+1];Array.isArray(r)?void 0===s[e]&&(s[e]=[]):void 0===s[e]&&(s[e]={}),s=s[e]}})}),this.persist=!1;for(let t in e)this.receiver[t]=e[t];this.persist=!0}}}on(e,t){this.listeners.has(e)||this.listeners.set(e,t)}off(e){this.listeners.has(e)&&this.listeners.delete(e)}emit(e,t){if(this.listeners.has(e)){this.listeners.get(e).call(this,t)}}logMessage(e){this.logging&&console.log(Date.now()+": "+e)}async start_idb(e,t){if(this.store){let r=this;(e=e||[]).forEach(function(e){r.useObjectStore(e,"id")}),await this.open();let s=!1;for(const e of this.objectStores.keys())this.idb.objectStoreNames.contains(e)||(s=!0),this.stores[e]=new this.objectStore(e);if(this.logMessage("upgradeNeeded: "+s),s){let e=this.idb.version+1;this.idb.close(),await this.open(e),this.emit("databaseReady"),t()}else this.emit("databaseReady"),t()}}start(e){e=e||[];return new Promise(t=>{this.start_idb(e,function(){t(!0)})})}useObjectStore(e,t){let r={};t?r.keyPath=t:r.autoIncrement=!0,this.objectStores.set(e,r)}deleteObjectStore(e){this.objectStores.delete(e)}createObjectStores(){if(this.idb)for(const[e,t]of this.objectStores.entries())this.idb.objectStoreNames.contains(e)||(this.logMessage("object store created: "+e),this.idb.createObjectStore(e,t),this.stores[e]||(this.stores[e]=new this.objectStore(e)))}open_database(e,t){if(!this.store)return t({error:"Open Database Error: Store Name not defined"});t||(t=e,e=null);let r=indexedDB.open(this.store,e),s=this;r.onsuccess=function(e){s.idb=e.target.result,s.emit("databaseOpen",s.idb),t({db:s.idb})},r.onerror=function(e){t({error:e.target.errorCode})},r.onupgradeneeded=function(e){s.idb=e.target.result,s.createObjectStores()}}open(e){return new Promise(t=>{this.open_database(e,function(e){t(e)})})}};export{DPP};